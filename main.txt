<!DOCTYPE HTML>
<html>
  <head>

      <script src="kinetic-v1.0.0.js">
      </script>
      <script
src="http://www.html5canvastutorials.com/libraries/kinetic2d-v1.0.2.js">
      </script>
      <script>

          var kin;
          var myLine;
          var Theta = 0;


          function Square(X, Y, Sqwidth, Sqheight, SqBW){
              this.X = X;
              this.Y = Y;
              this.SqBW = SqBW;
              this.Sqwidth = Sqwidth;
              this.Sqheight = Sqheight;


          }

            function Line(a, b, Lwidth, Lheight, LborderWidth){
              this.a = a;
              this.b = b;
              this.Lwidth = Lwidth;
              this.Lheight = Lheight;
              this.LborderWidth = LborderWidth;

             }

 

function doKeyDown(evt){


 switch (evt.keyCode) {


   case 65:  /* A arrow was pressed */
               {
      


     }
     break;
    case 66:  /* B arrow was pressed */
               {
      


     }
     break;
 case 67:  /* C arrow was pressed */
               {
      


     }
     break;


 }
}




          function updateStage(){


          }

              window.onload = function(){
              var canvas = document.getElementById("myCanvas");
              var context = canvas.getContext("2d");
 
             window.addEventListener('keydown',doKeyDown,true);
              kin = new Kinetic_2d("myCanvas");



//MOVING TRIANGLE SIDES 
///////////////////////////////////////////////////////////////////////////////////////////////////////
//LEFT 
                     //oppTriangle       = new Line(398,180,280,325,5 );      //END     POSITION
                       oppTriangle       = new Line( 450,220,311,300,5 );      //START POSITION
//BOTTOM
                    //adjTriangle          = new Line(284, 323, 500,323,5);     //END    POSITION  
                      adjTriangle          =  new Line (125 ,0 ,0 ,50  ,5);          //START POSITION
//RIGHT
                    //hypTriangle         = new Line (398 ,185 ,505 ,325  ,5);   //END    POSITION
                     hypTriangle          = new Line (320 ,220 ,500 ,300  ,5);   //START POSITION
///////////////////////////////////////////////////////////////////////////////////////////////////////

//SMALL TRIANGLE
               oppTriangle2     = new Line(400,230,350, 300,5 );
               adjTriangle2      = new Line(450 ,300 ,350 , 300  ,5);
               hypTriangle2     = new Line(450 ,300 ,396 , 231  ,5);
///////////////////////////////////////////////////////////////////////////////////////////////////////
//SIDES OF THE SQUARE            
              squareXSide = new Square(600,400, 600,90,5);	              
              squareYSide = new Square(200,400, 200,90,5);	
              squareZSide = new Square(200, 90, 600,90,5);	
              squareQSide = new Square(200,400, 600,400,5);	
///////////////////////////////////////////////////////////////////////////////////////////////////////
   context.restore();

              // set drawStage method
              kin.setDrawStage(function(){



updateStage();
kin.clear();

var context = kin.getContext();

 var canvas = kin.getCanvas();
    
  
 
 
 
   DrawTriangleFlyX(canvas,context); 
   DrawTriangleFlyY(canvas,context); 
   DrawTriangleFlyZ(canvas,context); 
   //DrawSqaure(canvas,context);
  //DrawTriangle(canvas,context);
 
              });
              kin.startAnimation();





function DrawSqaure(canvas,context){
//Square Right Side      X

  context.beginPath();
  context.lineWidth = squareXSide.SqBW;
  context.moveTo(squareXSide.X,squareXSide.Y);
  context.lineTo( squareXSide.Sqwidth, squareXSide.Sqheight);
  context.stroke();

//Square Left Side      Y

  context.beginPath();
  context.lineWidth = squareYSide.SqBW;
  context.moveTo(squareYSide.X,squareYSide.Y);
  context.lineTo( squareYSide.Sqwidth, squareYSide.Sqheight);
  context.stroke();

//Square Top Side       Z  

  context.beginPath();
  context.lineWidth = squareZSide.SqBW;
  context.moveTo(squareZSide.X,squareZSide.Y);
  context.lineTo( squareZSide.Sqwidth, squareZSide.Sqheight);
  context.stroke();

//Square Bottom Side   Q

  context.beginPath();
  context.lineWidth = squareQSide.SqBW;
  context.moveTo(squareQSide.X,squareQSide.Y);
  context.lineTo( squareQSide.Sqwidth, squareQSide.Sqheight);
  context.stroke();

}

//Draw Triangle

function DrawTriangle(canvas,context){
//opp side of trianlge

  context.beginPath();
  context.lineWidth = oppTriangle2.LborderWidth;
  context.moveTo(oppTriangle2.a,oppTriangle2.b);
  context.lineTo( oppTriangle2.Lwidth, oppTriangle2.Lheight);
  context.stroke();


//adj side of trianlge


  context.beginPath();
  context.lineWidth = adjTriangle2.LborderWidth;
  context.moveTo(adjTriangle2.a,adjTriangle2.b);
  context.lineTo( adjTriangle2.Lwidth, adjTriangle2.Lheight);
  context.stroke();


//hyp side of trianlge

  context.beginPath();
  context.lineWidth = hypTriangle2.LborderWidth;
  context.moveTo(hypTriangle2.a,hypTriangle2.b);
  context.lineTo( hypTriangle2.Lwidth, hypTriangle2.Lheight);
  context.stroke();


}



function DrawTriangleFlyX(canvas,context){


//opp side of trianlge

  context.beginPath();
  context.lineWidth = oppTriangle.LborderWidth;
  context.moveTo(oppTriangle.a,oppTriangle.b);
  context.lineTo( oppTriangle.Lwidth, oppTriangle.Lheight);
  context.stroke();
 

}



function DrawTriangleFlyY(canvas,context){


 


//adj side of trianlge

  context.beginPath();
  context.lineWidth = adjTriangle.LborderWidth;
  context.moveTo(adjTriangle.a,adjTriangle.b);
  context.lineTo( adjTriangle.Lwidth,adjTriangle.Lheight);
  context.stroke();
 

}
function DrawTriangleFlyZ(canvas,context){


 


//hyp side of trianlge

  context.beginPath();
  context.lineWidth = hypTriangle.LborderWidth;
  context.moveTo(hypTriangle.a,hypTriangle.b);
  context.lineTo( hypTriangle.Lwidth, hypTriangle.Lheight);
  context.stroke();
 

}

          };







          </script>
</head>
<body onmousedown="return false;">
<canvas id="myCanvas" width="808" height="840">

</canvas>
</body>
</html>